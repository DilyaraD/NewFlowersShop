@{
    var isAuthenticated = Context.User.Identity.IsAuthenticated;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] Новые цветы</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="icon" href="./img_s/logo.svg" type="image/icon-x" />
    @*  *@
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link href="https://fonts.googleapis.com/css2?family=Irish+Grover&family=Marmelad&family=Rufina:wght@200;700&display=swap"
          rel="stylesheet" />
    <link rel="stylesheet" href="~/NewFlowersShop.styles.css" asp-append-version="true" />
</head>
<body>
    <footer>
        <div class="logoA">
            <a href="@Url.Action("Index", "Home")">
            <img src="~/img_s/logo.svg" />
            <h1 id="logoText">
                Новые<br />
                цветы
            </h1>
            </a>
        </div>
        <div class="City">
            <img src="~/img_s/map.svg" />
            <h1>г.Казань</h1>
        </div>
        <div id="footer_center">
            <h1><a href="@Url.Action("CatalogPage", "Home")">Каталог</a></h1>
            <h1><a href="@Url.Action("DeliveryPage", "Home")">Доставка</a></h1>
            <h1><a href="@Url.Action("ContactPage", "Home")">Контакты</a></h1>
        </div>
        <div>
            <button class="footerBtn">
                <div><a href="@Url.Action("CatalogPage", "Home")"><img src="~/img_s/search.svg" /></a></div>
            </button>
            <button class="footerBtn" id="profileButton">
                <div><a href="@Url.Action("DataPage", "Home")"><img src="~/img_s/profil.svg" /></a></div>
            </button>
            <button class="footerBtn" id="basketButton">
                <div >
                    <a href="@Url.Action("BasketPage", "Home")"> <img src="~/img_s/shopping-cart.svg" /></a>
                </div>
            </button>
            <button class="footerBtn" id="menuButton">
                <div class="menu"></div>
                <div class="menu"></div>
                <div class="menu"></div>
            </button>
        </div>
    </footer>
    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <div class="modal" id="authModal">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Авторизация</h5>
                <span class="close-button" id="closeModal">&times;</span>
            </div>
            <div class="modal-body">
                <input class="input-field" id="loginUser" placeholder="Логин">
                <input class="input-field" id="passwordUser" type="password" placeholder="Пароль">
                <div class="button-group">
                    <button class="custom-btn">Войти</button>
                    <button class="custom2-btn" id="registration">Регистрация</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal" id="registerModal">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Регистрация</h5>
                <span class="close-button" id="closeModal2">&times;</span>
            </div>
            <div class="modal-body">
                <form id="registerForm">
                    <input class="input-field" name="login" placeholder="Логин"> 
                    <input class="input-field" name="lastName" placeholder="Фамилия">
                    <input class="input-field" name="firstName" placeholder="Имя"> 
                    <input class="input-field" name="phoneNumber" type="tel" placeholder="Номер телефона">
                    <input class="input-field" name="password" type="password" placeholder="Пароль">
                    <div class="button-group">
                        <button type="submit" class="custom2-btn" id="registration2">Зарегистрироваться</button>
                    </div>
                </form>
            </div>
        </div>
    </div>


    <div class="modalM" id="menuModal">
        <div class="modal-contentM">
            <div class="modal-headerM">
                <span class="close-buttonM" id="closeMenuModal">&times;</span>
            </div>
            <div class="button-group">
                <button type="button" class="custom-btn" data-href="@Url.Action("DataPage", "Home")">мои данные</button>
                <button type="button" class="custom-btn" data-href="@Url.Action("productManagementPage", "Home")">товары</button>
                <button type="button" class="custom-btn" data-href="@Url.Action("orderManagementPage", "Home")">заказы</button>
                <button type="button" class="custom-btn" data-href="@Url.Action("homePageManagementPage", "Home")">управление главной страницей</button>
                <button type="button" class="custom-btn" data-href="@Url.Action("OrderHistoryPage", "Home")">история заказов</button>
                <button type="button" class="custom-btn" data-href="@Url.Action("managingReviewsPage", "Home")">управление отзывами</button>
                <button type="button" class="custom-btn" data-href="@Url.Action("CourierOrderPage", "Home")">заказы на доставку</button>
                <button type="button" class="custom-btn" data-href="@Url.Action("DocumentManagementPage", "Home")">управление документами</button>
                <button type="button" class="custom-btn" data-href="@Url.Action("EmployeeManagementPage", "Home")">управление персоналом</button>
                <button type="button" class="custom-btn" data-href="@Url.Action("CashRegisterPage", "Home")">кассовая книга</button>
                <button type="button" class="custom-btn" data-href="@Url.Action("ShopOrderPage", "Home")">выдача заказов</button>
                <button type="button" class="custom-btn" data-href="/Home/Logout">выйти</button>
            </div>
        </div>
    </div>

    <div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteModalLabel">Сообщение!</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Закрыть"></button>
                </div>
                <div class="modal-body" id="notificationModalBody">
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">ОК</button>
                </div>
            </div>
        </div>
    </div>
        
    <div class="bottom">
        <div class="bA">
            <a>Cвадебная флористика</a>
            <a>Букеты на любые мероприятия</a>
            <a>Букеты невесты</a>
            <a>Композиции</a>
        </div>
        <div class="bLink">
            <a href="https://www.instagram.com/">
                <img src="~/img_s/inst.svg" alt="Instagram" />
            </a>
            <a href="https://web.telegram.org/">
                <img src="~/img_s/tg.svg" alt="Telegram" />
            </a>
        </div>
    </div>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    @await RenderSectionAsync("Scripts", required: false)
   <script>

        document.addEventListener("DOMContentLoaded", function () {

            const userRole = '@ViewData["UserRole"]'; 

            const buttons = {
                productButton: document.querySelector('button[data-href="@Url.Action("productManagementPage", "Home")"]'),
                orderButton: document.querySelector('button[data-href="@Url.Action("orderManagementPage", "Home")"]'),
                historyButton: document.querySelector('button[data-href="@Url.Action("OrderHistoryPage", "Home")"]'),
                homePageManagement: document.querySelector('button[data-href="@Url.Action("homePageManagementPage", "Home")"]'),
                reviewManagement: document.querySelector('button[data-href="@Url.Action("managingReviewsPage", "Home")"]'),
                courierOrders: document.querySelector('button[data-href="@Url.Action("CourierOrderPage", "Home")"]'),
                documentManagement: document.querySelector('button[data-href="@Url.Action("DocumentManagementPage", "Home")"]'),
                employeeManagement: document.querySelector('button[data-href="@Url.Action("EmployeeManagementPage", "Home")"]'),
                cashRegister: document.querySelector('button[data-href="@Url.Action("CashRegisterPage", "Home")"]'),
                shopOrders: document.querySelector('button[data-href="@Url.Action("ShopOrderPage", "Home")"]')
            };

            function hideButton(button) {
                if (button) button.style.display = "none";
            }

            // Логика отображения кнопок по ролям
            switch (userRole) {
                case "Customer":
                    hideButton(buttons.productButton);
                    hideButton(buttons.orderButton);
                    hideButton(buttons.homePageManagement);
                    hideButton(buttons.reviewManagement);
                    hideButton(buttons.documentManagement);
                    hideButton(buttons.employeeManagement);
                    hideButton(buttons.cashRegister);
                    hideButton(buttons.courierOrders);
                    hideButton(buttons.shopOrders);
                    break;

                case "Florist":
                    hideButton(buttons.historyButton);
                    hideButton(buttons.homePageManagement);
                    hideButton(buttons.reviewManagement);
                    hideButton(buttons.documentManagement);
                    hideButton(buttons.employeeManagement);
                    hideButton(buttons.cashRegister);
                    hideButton(buttons.courierOrders);
                    hideButton(buttons.shopOrders);
                    break;

                case "Courier":
                    hideButton(buttons.productButton);
                    hideButton(buttons.orderButton);
                    hideButton(buttons.historyButton);
                    hideButton(buttons.homePageManagement);
                    hideButton(buttons.reviewManagement);
                    hideButton(buttons.documentManagement);
                    hideButton(buttons.employeeManagement);
                    hideButton(buttons.cashRegister);
                    hideButton(buttons.shopOrders);
                    break;

                case "Administrator":
                    hideButton(buttons.productButton);
                    hideButton(buttons.orderButton);
                    hideButton(buttons.courierOrders);
                    hideButton(buttons.historyButton);
                    hideButton(buttons.shopOrders);
                    break;

                case "Accountant":
                    hideButton(buttons.productButton);
                    hideButton(buttons.orderButton);
                    hideButton(buttons.historyButton);
                    hideButton(buttons.homePageManagement);
                    hideButton(buttons.reviewManagement);
                    hideButton(buttons.courierOrders);
                    hideButton(buttons.employeeManagement);
                    hideButton(buttons.shopOrders);
                    break;
            }

            const footerCenter = document.getElementById("footer_center");
            const footerButtons = document.querySelectorAll(".footerBtn");
            const profileButton1 = document.getElementById("profileButton");
            const basketButton1 = document.getElementById("basketButton");
            const menuButton1 = document.getElementById("menuButton");
            const logoLink = document.querySelector(".logoA a");

           
            const rolesToHideFooter = ["Accountant", "Administrator", "Florist", "Courier"];

            if (rolesToHideFooter.includes(userRole)) {
                if (footerCenter) {
                    footerCenter.style.pointerEvents = "none"; // Отключает клики
                    footerCenter.style.opacity = "0"; // Делает менее заметным
                    footerCenter.style.backgroundColor = "white"; // Закрашивает белым
                }

                footerButtons.forEach(button => {
                    button.style.pointerEvents = "none";
                    button.style.opacity = "0";
                    button.style.backgroundColor = "white";
                });

                if (profileButton1) {
                    profileButton1.style.pointerEvents = "none";
                    profileButton1.style.opacity = "0";
                    profileButton1.style.backgroundColor = "white";
                }

                if (basketButton1) {
                    basketButton1.style.pointerEvents = "none";
                    basketButton1.style.opacity = "0";
                    basketButton1.style.backgroundColor = "white";
                }

                if (menuButton1) {
                    menuButton1.style.pointerEvents = "auto";
                    menuButton1.style.opacity = "1";
                    menuButton1.style.backgroundColor = "none";
                }

                if (logoLink) {
                    logoLink.style.pointerEvents = "none"; 
                }
            }


            let authModal = document.getElementById("authModal");
            let registerModal = document.getElementById("registerModal");
            let menuModal = document.getElementById("menuModal");
            let profileButton = document.getElementById("profileButton");
            let menuButton = document.getElementById("menuButton");
            let closeModal = document.getElementById("closeModal");
            let closeModal2 = document.getElementById("closeModal2");
            let closeMenuModal = document.getElementById("closeMenuModal");
            let registrationBtn = document.getElementById("registration");
            let basketButton = document.getElementById('basketButton');

            async function checkAuthAndProceed(action) {
                try {
                    let response = await fetch("/Home/IsAuthenticated");
                    let data = await response.json();

                    if (data.isAuthenticated) {
                        action(true);
                    } else {
                        action(false);
                    }
                } catch (error) {
                    console.error("Ошибка:", error);
                }
            }

            basketButton.addEventListener("click", function (event) {
                event.preventDefault();
                checkAuthAndProceed((isAuthenticated) => {
                    if (isAuthenticated) {
                        window.location.href = "/Home/BasketPage";
                    } else {
                        authModal.style.display = "flex";
                    }
                });
            });

            profileButton.addEventListener("click", function (event) {
                event.preventDefault(); 
                checkAuthAndProceed((isAuthenticated) => {
                    if (isAuthenticated) {
                        window.location.href = "/Home/DataPage";
                    } else {
                        authModal.style.display = "flex";
                    }
                });
            });

            menuButton.addEventListener("click", function () {
                checkAuthAndProceed((isAuthenticated) => {
                    if (isAuthenticated) {
                        menuModal.style.display = "flex";
                    } else {
                        authModal.style.display = "flex";
                    }
                });
            });

            closeModal.addEventListener("click", function () {
                authModal.style.display = "none";
            });

            closeModal2.addEventListener("click", function () {
                registerModal.style.display = "none";
            });

            closeMenuModal.addEventListener("click", function () {
                menuModal.style.display = "none";
            });

            registrationBtn.addEventListener("click", function () {
                authModal.style.display = "none";
                registerModal.style.display = "flex";
            });

            document.querySelectorAll("#menuModal .custom-btn").forEach(button => {
    button.addEventListener("click", function (event) {
        event.stopPropagation(); 
        window.location.href = this.getAttribute("data-href");
    });
});


            document.querySelectorAll("#authModal .custom-btn").forEach(button => {
                button.addEventListener("click", function () {
                    let login = document.getElementById("loginUser").value;
                    let password = document.getElementById("passwordUser").value;

                    fetch("/Home/Login", {
                        method: "POST",
                        headers: {
                            "Content-Type": "application/x-www-form-urlencoded"
                        },
                        body: `login=${encodeURIComponent(login)}&password=${encodeURIComponent(password)}`
                    })
                        .then(response => {
                            if (response.redirected) {
                                window.location.href = response.url;
                            } else {
                                return response.json();
                            }
                        })
                        .then(data => {
                            if (data && !data.success) {
                                showMessage(data.message); 
                            }
                        })
                        .catch(error => {
                            console.error("Ошибка:", error);
                            showMessage("Произошла ошибка при авторизации."); 
                        });
                });
            });

        });


       function showMessage(message) {
           $('#deleteModal .modal-body').text(message);
           $('#deleteModal').modal('show');
            $('#deleteModal').css('z-index', '2000');
        }

        document.addEventListener("DOMContentLoaded", function () {
            const registerForm = document.getElementById("registerForm");

            if (registerForm) {
                registerForm.addEventListener("submit", function (event) {
                    event.preventDefault();

                    const formData = new FormData(registerForm);

                    const login = formData.get("login");
                    const password = formData.get("password");
                    const firstName = formData.get("firstName");
                    const lastName = formData.get("lastName");
                    const phoneNumber = formData.get("phoneNumber");

                    if (login === "" || lastName === "" || firstName === "" || phoneNumber === "" || password === "") {
                        showMessage("Все поля должны быть заполнены!");
                        return false;
                    }

                    let phonePattern = /^(\8)9\d{9}$/;
                    if (!phonePattern.test(phoneNumber)) {
                        showMessage("Введите корректный номер телефона в формате 89XXXXXXXXX");
                        return false;
                    }

                    if (password.length > 0 && password.length < 6) {
                        showMessage("Пароль должен содержать минимум 6 символов!");
                        return false;
                    }

                    fetch("/Home/Register", {
                        method: "POST",
                        body: new URLSearchParams({
                            login, password, firstName, lastName, phoneNumber
                        }),
                        headers: {
                            "Content-Type": "application/x-www-form-urlencoded"
                        }
                    })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                window.location.href = data.redirectUrl;
                            } else {
                                showMessage(data.message);
                            }
                        })
                        .catch(error => {
                            console.error("Ошибка при регистрации:");
                            showMessage("Произошла ошибка. Попробуйте снова.");
                        });
                });
            }
        });

   </script>
</body>
</html>